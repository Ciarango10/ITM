@page "/owners/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>OwnerCreate</h3>
<OwnerForm @ref="ownerForm" Owner="owner" OnSubmit="Create" ReturnAction="Return" />

@code {
    private Owner owner = new();
    private OwnerForm ownerForm;

    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/owners", owner);

        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessage();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }
        Return();

        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.Center,
                ShowConfirmButton = true,
                Timer = 6000
            });

        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }

    private void Return()
    {
        // ownerForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/owners");
    }
}
